// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projeto_final.Models;

#nullable disable

namespace projeto_final.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("projeto_final.Models.Boleto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Faturado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("PedidoID")
                        .HasColumnType("int");

                    b.Property<int>("ValorPedido")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PedidoID");

                    b.ToTable("Boletos");
                });

            modelBuilder.Entity("projeto_final.Models.CartaoCredito", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Faturado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NumeroCartao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("PedidoID")
                        .HasColumnType("int");

                    b.Property<int>("ValorPedido")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PedidoID");

                    b.ToTable("CartaoCreditos");
                });

            modelBuilder.Entity("projeto_final.Models.Consumidor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Endereço")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Consumidors");
                });

            modelBuilder.Entity("projeto_final.Models.Pedido", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdConsumidor")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IdConsumidor");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("projeto_final.Models.Produto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdPedido")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("double");

                    b.HasKey("ID");

                    b.HasIndex("IdPedido");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("projeto_final.Models.Boleto", b =>
                {
                    b.HasOne("projeto_final.Models.Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("PedidoID");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("projeto_final.Models.CartaoCredito", b =>
                {
                    b.HasOne("projeto_final.Models.Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("PedidoID");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("projeto_final.Models.Pedido", b =>
                {
                    b.HasOne("projeto_final.Models.Consumidor", "Consumidor")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdConsumidor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consumidor");
                });

            modelBuilder.Entity("projeto_final.Models.Produto", b =>
                {
                    b.HasOne("projeto_final.Models.Pedido", "PedidoAtual")
                        .WithMany("Itens")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PedidoAtual");
                });

            modelBuilder.Entity("projeto_final.Models.Consumidor", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("projeto_final.Models.Pedido", b =>
                {
                    b.Navigation("Itens");
                });
#pragma warning restore 612, 618
        }
    }
}
